---
# ============================================================================
# VIDEO CAPTURE SPECIFIC CONFIGURATION TASKS
# ============================================================================
# Tasks specific to video capture/processing machines
# Included by local-environments.yml when env_video_capture group is detected

- name: "📹 Video Capture Configuration"
  ansible.builtin.debug:
    msg: "Configuring Video Capture: {{ inventory_hostname }}"

# macOS Video Capture Configuration
- name: MacOS Video Capture Block
  when: ansible_os_family == "Darwin"
  block:
    - name: Install video capture software
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      loop:
        - ffmpeg
        - imagemagick
        - youtube-dl

    - name: Install macOS video applications
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      loop:
        - obs
        - vlc

    - name: Check video capture devices
      ansible.builtin.command: system_profiler SPCameraDataType -json
      register: macos_video_devices
      changed_when: false

  rescue:
    - name: Handle macOS video capture configuration errors
      ansible.builtin.debug:
        msg:
          - "⚠️  macOS video capture configuration encountered errors"
          - "This may be due to missing Homebrew or network connectivity"
          - "Please ensure Homebrew is installed and internet is accessible"

  always:
    - name: Log macOS video capture configuration attempt
      ansible.builtin.debug:
        msg: "macOS video capture configuration attempt completed"

# Linux Video Capture Configuration
- name: Linux Video Capture Block
  when: ansible_os_family in ["Debian", "RedHat"]
  block:
    - name: Install video capture packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - ffmpeg
        - v4l-utils
        - cheese
        - vlc

    - name: Check video devices
      ansible.builtin.shell: |
        if command -v v4l2-ctl >/dev/null 2>&1; then
          v4l2-ctl --list-devices 2>/dev/null || echo "No video devices found"
        else
          echo "Video4Linux tools not installed"
        fi
      register: linux_video_devices
      changed_when: false

  rescue:
    - name: Handle Linux video capture configuration errors
      ansible.builtin.debug:
        msg:
          - "⚠️  Linux video capture configuration encountered errors"
          - "This may be due to missing package repositories or permissions"
          - "Please check package manager configuration and sudo access"

  always:
    - name: Log Linux video capture configuration attempt
      ansible.builtin.debug:
        msg: "Linux video capture configuration attempt completed"

# Performance validation for video capture
- name: Validate video capture requirements
  ansible.builtin.assert:
    that:
      - ansible_processor_cores >= 8
      - ansible_memory_mb.real.total >= 16384
    fail_msg: >
      System does not meet minimum requirements for video capture
      (8 cores, 16GB RAM)
    success_msg: "System meets video capture requirements"

- name: Display detected video devices
  ansible.builtin.debug:
    msg: "Video devices detected - check logs for details"
