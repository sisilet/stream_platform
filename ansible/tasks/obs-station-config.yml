---
# ============================================================================
# OBS STATION SPECIFIC CONFIGURATION TASKS
# ============================================================================
# Tasks specific to OBS operator stations
# Included by local-environments.yml when env_obs_station group is detected

- name: "ðŸŽ¬ OBS Station Configuration"
  debug:
    msg: "Configuring OBS Station: {{ inventory_hostname }}"

# Windows OBS Station Configuration
- name: Windows OBS Station Block
  block:
    - name: Check OBS Studio installation directory
      win_stat:
        path: "C:\\Program Files\\obs-studio\\bin\\64bit\\obs64.exe"
      register: obs_exe_check

    - name: Validate OBS Studio version
      win_shell: |
        $version = (Get-ItemProperty "C:\Program Files\obs-studio\bin\64bit\obs64.exe").VersionInfo.FileVersion
        Write-Output $version
      register: obs_version_check
      when: obs_exe_check.stat.exists

    - name: Create OBS Studio profile directory
      win_file:
        path: "C:\\Users\\{{ ansible_user }}\\AppData\\Roaming\\obs-studio\\basic\\profiles\\Streaming"
        state: directory

    - name: Configure OBS Studio basic settings
      win_copy:
        content: |
          [General]
          Name=Streaming
          
          [Video]
          BaseCX=1920
          BaseCY=1080
          OutputCX=1920
          OutputCY=1080
          FPSType=0
          FPSCommon=30
          
          [Audio]
          SampleRate=48000
          ChannelSetup=Stereo
          
          [Output]
          Mode=Simple
          
          [SimpleOutput]
          VBitrate=6000
          StreamEncoder=x264
          ABitrate=160
          UseAdvanced=false
          Preset=veryfast
        dest: "C:\\Users\\{{ ansible_user }}\\AppData\\Roaming\\obs-studio\\basic\\profiles\\Streaming\\basic.ini"

    - name: Configure Windows audio for low-latency
      win_shell: |
        # Set audio buffer size for low latency
        $audioKey = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Audio"
        New-ItemProperty -Path $audioKey -Name "DisableProtectedAudioDG" -Value 1 -PropertyType DWORD -Force
        
        # Set multimedia class scheduler for audio
        $mmcssKey = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile"
        Set-ItemProperty -Path $mmcssKey -Name "SystemResponsiveness" -Value 1

    - name: Install VoiceMeeter for audio routing
      win_chocolatey:
        name: voicemeeter
        state: present

    - name: Create OBS startup script
      win_copy:
        content: |
          @echo off
          echo Starting OBS Studio for {{ inventory_hostname }}...
          cd "C:\Program Files\obs-studio\bin\64bit"
          obs64.exe --profile "Streaming" --minimize-to-tray
          pause
        dest: "C:\\Users\\{{ ansible_user }}\\Desktop\\Start-OBS.bat"

    - name: Configure Windows firewall for OBS
      win_firewall_rule:
        name: "OBS Studio"
        localport: "1935,8080"
        action: allow
        direction: in
        protocol: tcp
        state: present

  when: ansible_os_family == "Windows"

# macOS OBS Station Configuration  
- name: macOS OBS Station Block
  block:
    - name: Check OBS installation
      stat:
        path: "/Applications/OBS.app/Contents/MacOS/OBS"
      register: obs_macos_check

    - name: Install OBS via Homebrew
      homebrew_cask:
        name: obs
        state: present
      when: not obs_macos_check.stat.exists

    - name: Configure OBS profiles directory
      file:
        path: "~/Library/Application Support/obs-studio/basic/profiles/Streaming"
        state: directory
        mode: '0755'

    - name: Set macOS audio preferences for OBS
      shell: |
        # Set audio sample rate to 48kHz
        sudo defaults write /Library/Preferences/Audio\ MIDI\ Setup com.apple.audio.aggregate.sample-rate -int 48000
        
        # Enable exclusive mode for audio devices
        defaults write com.apple.coreaudio "Exclusive Mode" -bool true

  when: ansible_os_family == "Darwin"

# Performance validation
- name: Check system performance for OBS
  debug:
    msg:
      - "CPU Cores: {{ ansible_processor_cores }}"
      - "RAM: {{ ansible_memory_mb.real.total }} MB"
      - "Free RAM: {{ ansible_memory_mb.real.free }} MB"
  
- name: Validate minimum requirements for OBS
  assert:
    that:
      - ansible_processor_cores >= 4
      - ansible_memory_mb.real.total >= 8192
    fail_msg: "System does not meet minimum requirements for OBS (4 cores, 8GB RAM)"
    success_msg: "System meets OBS requirements"

- name: Test network connectivity for streaming
  uri:
    url: "https://ingest.rtmp.youtube.com"
    method: HEAD
    timeout: 10
  register: youtube_connectivity
  failed_when: false

- name: Display network test results
  debug:
    msg: 
      - "YouTube RTMP connectivity: {{ 'OK' if youtube_connectivity.status == 200 else 'FAILED' }}"
      - "Response time: {{ youtube_connectivity.elapsed if youtube_connectivity.elapsed is defined else 'N/A' }}s" 